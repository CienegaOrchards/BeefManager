<!DOCTYPE html>
<html>
<head>
    <% include include/jquery-header.ejs %>
    <% include include/parse-header.ejs %>
    <% include include/semantic-header.ejs %>

    <title>Inventory</title>

</head>
<body>
    <div class="ui fixed large teal main menu"></div>

    <div class="main content"></div>

    <div class="ui small basic modal qrcode">
        <i class="close icon"></i>
        <div class="header">QR Code</div>
        <div class="ui two column centered grid">
            <div class="center aligned column">
                <div class="ui image qrcode center aligned"></div>
            </div>
        </div>
        <div class="actions">
            <div class="ui positive button">OK</div>
        </div>
    </div>

    <% include include/jquery-scripts.ejs %>
    <% include include/parse-scripts.ejs %>
    <% include include/semantic-scripts.ejs %>
    <% include include/qrcode-scripts.ejs %>
    <% include include/moment-scripts.ejs %>

    <script type="text/javascript">

    $.fn.appendText = function(text) {
        return this.each(function() {
            var textNode = document.createTextNode(text);
            $(this).append(textNode);
        });
    };

    function makeSpecies(meat)
    {
        var cut = meat.get('cut');
        var speciesStr = cut.get('species')
        var speciesLabel = speciesStr.replace(/[^a-zA-Z]/g, '_');

        var existing = $('.ui.segment.species_'+speciesLabel);
        if(!existing || existing.size() == 0)
        {
            existing = $('<div>').addClass('ui raised attached segment species_'+speciesLabel);

            $('.main.content').append(
                    $('<h1>', {text: speciesStr}).addClass('ui top attached block header'),
                    existing
            );
        }

        return existing;
    }

    function makeCategory(meat)
    {
        var cut = meat.get('cut');
        var speciesStr = cut.get('species');
        var speciesLabel = speciesStr.replace(/[^a-zA-Z]/g, '_');
        var categoryStr = cut.get('category');
        var categoryLabel = categoryStr.replace(/[^a-zA-Z]/g, '_');

        var species = makeSpecies(meat);
        var existing = species.find('.ui.cards.category_'+categoryLabel);
        if(!existing || existing.size() == 0)
        {
            existing = $('<div>').addClass('ui cards category_'+categoryLabel);

            species.append(
                $('<h2>', {text: categoryStr}).addClass('ui huge teal ribbon label'),
                existing
            );
        }

        return existing;
    }

    function makeMeat(meat)
    {
        var cut = meat.get('cut');
        var animal = meat.get('animal');
        var freezer = meat.get('freezer');

        var quantity = meat.get('units');
        var quantityStr = quantity.toFixed(2);

        var speciesStr = cut.get('species');
        var cutStr = cut.get('cut') === undefined ? '' : cut.get('cut');
        var categoryStr = cut.get('category');
        var unitStr = cut.get('units');
        var pricePerUnit = cut.get('price');
        var pricePerUnitStr = pricePerUnit.toFixed(2);

        var slaughterDate = animal === undefined ? null : animal.get('slaughtered');

        var locationStr = freezer === undefined || freezer === null ? meat.get('location') : freezer.get('location');
        var freezerStr = freezer === undefined || freezer === null ? 'N/A' : freezer.get('identifier');

        var meatPriceStr = (quantity * pricePerUnit).toFixed(2)
        var meatDescStr = quantityStr + unitStr + " " + speciesStr + " " + cutStr;

        var newMeat = $('<div>').addClass('ui meat card')
        .append(
            $('<div>').addClass('content')
            .append(
                $('<i>').addClass('right floated big qrcode icon').attr({ident: meat.id, desc: meatDescStr}),
                $('<div>').addClass('right floated').append($('<div>').addClass('ui green tag label').text('$'+meatPriceStr)),
                $('<div>').addClass('header').append($('<div>').addClass('ui teal small header').text(cutStr)),
                $('<div>').addClass('meta').text(quantityStr + ' ' + unitStr + ' @ $' + pricePerUnitStr + '/' + unitStr),
                $('<div>').addClass('left floated').append($('<i>').addClass('home icon')).appendText(locationStr),
                $('<div>').addClass('right floated').append($('<i>').addClass('power icon')).appendText(freezerStr)
            ),
            $('<div>').addClass('extra content')
            .append(
                $('<div>').addClass('left floated').append($('<i>').addClass('calendar icon')).appendText('Butchered: ' + (slaughterDate ? moment(slaughterDate).fromNow() : 'unknown'))
                )
        );

        return newMeat.appendTo(makeCategory(meat));
    }

    $(function()
    {
        var fonts = $.Deferred();
        WebFontConfig = {
            google: { families: [ 'Amatic+SC:700:latin' ] },
            active: function() { fonts.resolve(); }
        };

        var wf = document.createElement('script');
        wf.src = '//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
        wf.type = 'text/javascript';
        wf.async = 'true';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(wf, s);

        var meatQuery = new Parse.Query('Meat')
            .exists('freezer')
            .include('cut')
            .include('freezer')
            .include('animal')
            .limit(1000);

        // Parse.Query.ascending(xyz) won't let you sort by sub-object fields like cut.species,
        // so we form a collection and sort using a comparator
        var meats = meatQuery.collection();

        meats.fetch({
            success: function(meats)
            {
                meats.forEach(function(meat)
                {
                    makeMeat(meat);
                });

                fonts.done(function()
                            {
                                $("i.qrcode").click(function(e)
                                {
                                    var ident = $(this).attr('ident');
                                    var desc = $(this).attr('desc');

                                    $('.modal.qrcode .image.qrcode').empty();

                                    $('.modal.qrcode .image.qrcode').qrcode({
                                        size: 600, // 600 DPI

                                        ecLevel: 'H',

                                        fill: '#000',
                                        background: '#fff',
                                        text: '{"desc":"'+$(this).attr('desc')+'","id":"'+$(this).attr('ident')+'"}',

                                        minVersion: 13,
                                        maxVersion: 13,
                                        quiet: 4,
                                        mode: 2,
                                        mSize: 0.12,
                                        mPosY: 0.78,
                                        fontname: 'Amatic SC',
                                        fontcolor: '#c00',

                                        label: $(this).attr('desc')
                                    });

                                    $('.modal.qrcode>.header').text(desc);

                                    $('.modal.qrcode').modal('show');
                                });
                            });

            },
            error: function(err)
            {
                $('.main.content').text('There was an error fetching data');
            }
        });

    });
    </script>
</body>
</html>
